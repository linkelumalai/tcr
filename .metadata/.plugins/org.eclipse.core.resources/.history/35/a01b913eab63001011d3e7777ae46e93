package learn.strms.terminal;

import java.util.List;
import java.util.stream.Collectors;
import java.util.stream.Stream;

public class ParallelStreamsDemo {

	public static void main(String[] args) {

		long start = System.currentTimeMillis();

		Stream<Integer> data = Stream.iterate(1, n -> n + 1);

		List<Integer> a = data.limit(100).filter(n -> n % 2 == 0).map(aa -> aa * aa).collect(Collectors.toList());

		System.out.println(a);

		System.out.println(System.currentTimeMillis() - start);
		
		long start1 = System.currentTimeMillis(); 
		
		Stream<Integer> datap = Stream.iterate(1, n -> n + 1).parallel();

		List<Integer> ap = datap.limit(100).filter(n -> n % 2 == 0).map(aa -> aa * aa).collect(Collectors.toList());

		System.out.println(ap);
		
		
		
		System.out.println(System.currentTimeMillis()-start1);
	}
}
